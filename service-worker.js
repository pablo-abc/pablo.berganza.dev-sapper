!function(){"use strict";const e=["client/helpers.30ddd356.js","client/Head.37221a76.js","client/index.747ca9fb.js","client/about.9dd22596.js","client/index.es.0e4d4ac4.js","client/index.a3e77b6f.js","client/index.3bd91a04.js","client/client.d0faed28.js","client/client.0099beaa.js","client/[slug].7ea68f1c.js"].concat(["service-worker-index.html",".DS_Store","android-icon-144x144.png","android-icon-192x192.png","android-icon-36x36.png","android-icon-48x48.png","android-icon-72x72.png","android-icon-96x96.png","apple-icon-114x114.png","apple-icon-120x120.png","apple-icon-144x144.png","apple-icon-152x152.png","apple-icon-180x180.png","apple-icon-57x57.png","apple-icon-60x60.png","apple-icon-72x72.png","apple-icon-76x76.png","apple-icon-precomposed.png","apple-icon.png","browserconfig.xml","dracula.css","favicon-16x16.png","favicon-32x32.png","favicon-96x96.png","favicon.ico","global.css","img/.DS_Store","img/blog-pics/2019-03-18-800.jpg","img/blog-pics/2019-03-18-placeholder.jpg","img/blog-pics/2019-03-18.jpg","img/blog-pics/2019-06-11-800.jpg","img/blog-pics/2019-06-11-placeholder.jpg","img/blog-pics/2019-06-11.jpg","img/cljs-white.svg","img/profile-pic-400.jpeg","img/profile-pic-placeholder.jpeg","img/profile-pic.jpeg","manifest.json","ms-icon-144x144.png","ms-icon-150x150.png","ms-icon-310x310.png","ms-icon-70x70.png","overpass.css","site.css"]),n=new Set(e);self.addEventListener("install",n=>{n.waitUntil(caches.open("cache1587169815045").then(n=>n.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const n of e)"cache1587169815045"!==n&&await caches.delete(n);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const i=new URL(e.request.url);i.protocol.startsWith("http")&&(i.hostname===self.location.hostname&&i.port!==self.location.port||(i.host===self.location.host&&n.has(i.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1587169815045").then(async n=>{try{const i=await fetch(e.request);return n.put(e.request,i.clone()),i}catch(i){const c=await n.match(e.request);if(c)return c;throw i}}))))})}();
